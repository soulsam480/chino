{"version":3,"file":"chino.umd.js","sources":["../src/index.ts"],"sourcesContent":["import type { FastifyRequest } from 'fastify';\nimport Axios from 'axios';\nimport type { AxiosInstance, AxiosRequestConfig } from 'axios';\n\nconst ROUTE_METHOD_DELIMITER = '#';\nconst HTTP_METHODS = [\n  'get',\n  'delete',\n  'head',\n  'options',\n  'post',\n  'put',\n  'patch',\n];\nconst ROUTE_DESCRIPTOR_LENGTH = 2;\n\ntype OverWrite<T, U> = U & Omit<T, keyof U>;\n\ntype NormalizeArgs<T> = {\n  [K in keyof T as 'Headers' extends K\n    ? never\n    : 'Querystring' extends K\n    ? 'Query'\n    : K]: T[K];\n};\n\ntype InferParams<H> = H extends (...args: infer A) => Promise<unknown>\n  ? A extends Array<unknown>\n    ? A[0] extends FastifyRequest<infer R>\n      ? {\n          [K in keyof NormalizeArgs<R> as Lowercase<\n            string & K\n          >]: NormalizeArgs<R>[K];\n        }\n      : Record<string, never>\n    : never\n  : never;\n\ntype InferReturnType<H> = H extends Promise<infer R>\n  ? R\n  : H extends (...args: any[]) => infer R1\n  ? R1\n  : never;\n\ninterface CreateFetcherOptions extends AxiosRequestConfig {}\n\n/**\n * Registry is an object of routes with their handlers\n *\n * @example\n * ```ts\n *  const Routes = {\n *   'get#user': handler,\n *   'get#user/some/some': handler2,\n *   'post#user': handler3,\n * };\n * ```\n *\n * Note:\n *\n * the route method and path should be separated by # as it's required for type inference\n */\nexport class ChinoClient<\n  Registry extends { [x: string]: (...args: any) => Promise<any> },\n> {\n  axios: AxiosInstance;\n  #options: CreateFetcherOptions | undefined;\n\n  constructor(opts?: CreateFetcherOptions) {\n    this.#options = opts;\n\n    this.axios = Axios.create(this.#options);\n  }\n\n  #getLogMessage(msg: string) {\n    return `[Chino]: ${msg}`;\n  }\n\n  #getPathAndMethod(path: string) {\n    if (!path.includes(ROUTE_METHOD_DELIMITER))\n      throw new Error(\n        this.#getLogMessage('route method delimiter # is missing'),\n      );\n\n    const pathAndMethod = path.split(ROUTE_METHOD_DELIMITER);\n\n    if (pathAndMethod.length !== ROUTE_DESCRIPTOR_LENGTH)\n      throw new Error(\n        this.#getLogMessage('route should have both method and path'),\n      );\n\n    if (!HTTP_METHODS.includes(pathAndMethod[0].toLowerCase()))\n      throw new Error(this.#getLogMessage('invalid route method'));\n\n    return pathAndMethod;\n  }\n\n  /**\n   *\n   * @param route request route\n   * @param args route args object - subset of Fastify RouteGenericInterface\n   * @param requestConfig per request axios config to extend\n   */\n  async fetch<\n    K extends keyof Registry,\n    H extends Registry[K],\n    R extends InferReturnType<ReturnType<H>>,\n    Args extends InferParams<H>,\n  >(\n    route: K,\n    args: Args,\n    requestConfig: AxiosRequestConfig<\n      'body' extends keyof Args ? Args['body'] : any\n    > = {},\n  ) {\n    const [method, url] = this.#getPathAndMethod(route as string);\n\n    return await this.axios.request<R>({\n      method,\n      url: url.startsWith('/') ? url : `/${url}`,\n      ...requestConfig,\n      ...args,\n    });\n  }\n}\n"],"names":["msg","path","includes","Error","_classPrivateFieldLooseBase","this","_getLogMessage","split","pathAndMethod","length","HTTP_METHODS","toLowerCase","opts","axios","Object","defineProperty","_options","writable","value","Axios","create","fetch","route","args","requestConfig","url","_classPrivateFieldLoo","Promise","resolve","request","method","startsWith","e","reject","ChinoClient"],"mappings":"swBAIA,MACqB,CACnB,MACA,SACA,OACA,UACA,OACA,MACA,uHA8DeA,GACb,MAAmBA,YAAAA,CACpB,UAEiBC,EAAAA,GAChB,IAAKA,EAAKC,SA3EiB,KA4EzB,UAAMC,MAAAC,EACJC,KAAoBC,GAAAA,GAAA,wCAGxB,MAAsBL,EAAKM,MAhFA,KAkF3B,GAxE4B,IAwExBC,EAAcC,OAChB,MAAM,UACJL,EAAAC,WAAoB,2CAGxB,IAAKK,EAAaR,SAASM,EAAc,GAAGG,eAC1C,MAAM,UAAUP,EAAAC,WAAoB,yBAEtC,OACDG,CAAA,4BAjCH,WAME,WAAYI,wFAHZC,WAGuC,EAAAC,OAAAC,eAAAV,KAAAW,EAAA,CAAAC,UAAA,EAAAC,WAAA,IACrCd,aAAgBQ,EAEhBP,KAAKQ,MAAQM,UAAMC,SAAOf,KAAbW,GAAAA,GACd,CAVH,OAyCQK,EAAAA,UAAAA,eAMJC,EACAC,EACAC,QAjDJ,IAiDIA,IAAAA,EAEI,CAnDR,OAqD0B,IAAuBF,EAAAA,EAAvBjB,KAAuBiB,GAAAA,GAAAA,GAA9BG,EAFTC,EAAA,GAAA,OAAAC,QAAAC,QAEgBvB,KAEJQ,MAAMgB,QACtBC,EAAAA,CAAAA,OAHFJ,EAAA,GAIED,IAAKA,EAAIM,WAAW,KAAON,EAAtB,IAAgCA,GAClCD,EACAD,IA3DT,CAAA,MAAAS,GAAA,OAAAL,QAAAM,OAAAD,EAAA,CAAA,EAAAE,CAAA,CAAA"}